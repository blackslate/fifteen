:root {
  font-family: Avenir, Helvetica, Arial, sans-serif;

  --white: #fff;
  --light: #ddd;
  --mid: #888;
  --dark: #222;
  --bg: #030;

  --round: 8px;
  --main: 300px;
  --size: 52px;
  --edge:  5px;
  --tile: 64px; /* + 2 * var(-edge) = 73 */
  --gap:   1px;
  --tiny: 32px;

  color: var(--light);
  background-color: var(--dark);

  --seed1:
    1 * 4096
  + 2 * 256
  + 3 * 16
  + 4;
  --seed2:
    5 * 4096
  + 6 * 256
  + 7 * 16
  + 8;
  --seed3:
    9 * 4096
  + 10 * 256
  + 11 * 16
  + 12;
  --seed4:
    13 * 4096
  + 14 * 256
  + 15 * 16
  + 15;
}

body {
  margin: 0;
  padding: 0;
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
}

main {
  position: relative;
  width: var(--main);
  height: var(--main);
  border: 1px solid var(--white);
  border-radius: var(--round);
  box-sizing: border-box;
  background-color: var(--bg);
  overflow: hidden;

  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 1px;
  grid-auto-rows: repeat(4, 1fr);

  font-size: var(--size);
  line-height: var(--size);
  text-align: center;
}

label {
  display: inline-block;
  position: relative;
  width: var(--tile);
  height: var(--tile);
  border: var(--edge) outset var(--mid);
  pointer-events: none;
}
label:has(:checked) {
  border-color: transparent;
  background-color: var(--mid);
}
label span::after {
  position: relative;
  top: var(--round);
  /* background-color: #f009; */
}
label:has(:checked) span::after {
  display: none;
}

input {
  position: absolute;
  left: -999vw;
}

label:nth-child(4n + 1) {
  grid-column: 1;
}

label:nth-child(4n + 2) {
  grid-column: 2;
}

label:nth-child(4n + 3) {
  grid-column: 3;
}

label:nth-child(4n + 4) {
  grid-column: 4;
}

label:has(+ label + label + label + label :checked),
label:has(+ label:not(.wrap) :checked),
label:has(:checked) + label:not(.wrap),
label:has(:checked) + label + label + label + label {
  background-color: #050;
  pointer-events: all
}

label::before {
  position: absolute;
  left: 0;
  width: 100%;
  font-size: var(--tiny);
  text-align: center;
  margin: 0;
  padding: 0;
  /* background-color: #f006; */
}


label:has(+ label + label + label + label :checked)::before {
  content: "v";
  bottom: -22px;;
}

label:has(+ label:not(.wrap) :checked)::before {
  content: ">";
  bottom: 4px;
  left: 8px;
  text-align: right;
}

label:has(:checked) + label:not(.wrap)::before {
  content: "<";
  bottom: 4px;
  left: -8px;
  text-align: left;
}

label:has(:checked) + label + label + label + label::before {
  content: "^";
  top: -18px;
}


span {
  width:100%;
  height:100%;
}

label:nth-child(1) span::after{
  counter-set: one calc(
    ( var(--seed1)
    - mod(var(--seed1), 4096)
    ) / 4096
  );
  content: counter(one);
}

label:nth-child(2) span::after{
  counter-set: two calc(
    ( mod(var(--seed1), 4096)
    - mod(mod(var(--seed1), 4096), 256)
  ) / 256);
  content: counter(two);
}

label:nth-child(3) span::after{
  counter-set: three calc(
    ( mod(var(--seed1), 256)
    - mod(mod(var(--seed1), 256), 16)
    ) / 16);
  content: counter(three);
}

label:nth-child(4) span::after{
  counter-set: number mod(var(--seed1), 16);
  content: counter(number);
}

label:nth-child(5) span::after{
  counter-set: number calc(
    ( var(--seed2)
    - mod(var(--seed2), 4096)
    ) / 4096
  );
  content: counter(number);
}

label:nth-child(6) span::after{
  counter-set: number calc(
    ( mod(var(--seed2), 4096)
    - mod(mod(var(--seed2), 4096), 256)
    ) / 256);
  content: counter(number);
}

label:nth-child(7) span::after{
  counter-set: number calc(
    ( mod(var(--seed2), 256)
    - mod(mod(var(--seed2), 256), 16)
    ) / 16);
  content: counter(number);
}

label:nth-child(8) span::after{
  counter-set: number mod(var(--seed2), 16);
  content: counter(number);
}

label:nth-child(9) span::after{
  counter-set: number calc(
    ( var(--seed3)
    - mod(var(--seed3), 4096)
    ) / 4096
  );
  content: counter(number);
}

label:nth-child(10) span::after{
  counter-set: number calc(
    ( mod(var(--seed3), 4096)
    - mod(mod(var(--seed3), 4096), 256)
    ) / 256);
  content: counter(number);
}

label:nth-child(11) span::after{
  counter-set: number calc(
    ( mod(var(--seed3), 256)
    - mod(mod(var(--seed3), 256), 16)
    ) / 16);
  content: counter(number);
}

label:nth-child(12) span::after{
  counter-set: number mod(var(--seed3), 16);
  content: counter(number);
}

label:nth-child(13) span::after{
  counter-set: number calc(
    ( var(--seed4)
    - mod(var(--seed4), 4096)
    ) / 4096
  );
  content: counter(number);
}

label:nth-child(14) span::after{
  counter-set: number calc(
    ( mod(var(--seed4), 4096)
    - mod(mod(var(--seed4), 4096), 256)
    ) / 256);
  content: counter(number);
}

label:nth-child(15) span::after{
  counter-set: number calc(
    ( mod(var(--seed4), 256)
    - mod(mod(var(--seed4), 256), 16)
    ) / 16);
  content: counter(number);
}

label:nth-child(16) span::after{
  counter-set: number mod(var(--seed4), 16);
  content: counter(number);
}